
services:

  react-to-do_postgres:
    container_name: react-to-do_postgres
    build:
      context: ./server
      dockerfile: ./docker/postgres/Dockerfile   
    environment:      
      POSTGRES_DB: react-to-do     
      POSTGRES_USER: postgres      
      POSTGRES_PASSWORD: postgres
    ports:
      - "${REACT_TO_DO_POSTGRES_PORT}:${REACT_TO_DO_POSTGRES_PORT}"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  
  react-to-do_pgweb: 
    container_name: react-to-do_pgweb
    image: sosedoff/pgweb
    environment: 
      PGWEB_DATABASE_URL: "postgres://postgres:postgres@react-to-do_postgres:${REACT_TO_DO_POSTGRES_PORT}/react-to-do?sslmode=disable"
    ports: 
      - "${REACT_TO_DO_PG_WEB_PORT}:8081"
    restart: unless-stopped

  react-to-do_server:
    container_name: react-to-do_server
    build:
      context: ./server
      dockerfile: ./docker/server/Dockerfile
    environment:
      REACT_TO_DO_TYPEORM_HOST: $REACT_TO_DO_TYPEORM_HOST
      REACT_TO_DO_POSTGRES_PORT: $REACT_TO_DO_POSTGRES_PORT
    ports:
      - "${REACT_TO_DO_SERVER_PORT}:3001"
    restart: unless-stopped

  react-to-do_web:
    container_name: react-to-do_web
    build:
      context: ./web
      dockerfile: ./docker/Dockerfile
    ports:
      - "${REACT_TO_DO_WEB_PORT}:80"
    restart: unless-stopped