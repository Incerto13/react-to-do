{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport * as taskApi from \"../../api/taskApi\"; // These are ACTION CREATORS for the task reducer (department) of the store\n\nexport function createTask(task) {\n  return {\n    type: types.CREATE_TASK,\n    task: task // key used is referenced in reducer\n\n  };\n} // returns entire array of tasks\n\nexport function fetchTasks() {\n  return function (dispatch) {\n    return taskApi.getTasks().then(tasks => {\n      // separate action creator for successfull api call\n      dispatch({\n        type: types.FETCH_TASKS_SUCCESS,\n        tasks: tasks\n      });\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/redux/actions/taskActions.js"],"names":["types","taskApi","createTask","task","type","CREATE_TASK","fetchTasks","dispatch","getTasks","then","tasks","FETCH_TASKS_SUCCESS","catch","error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB,C,CAEA;;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,WADP;AAELF,IAAAA,IAAI,EAAEA,IAFD,CAEM;;AAFN,GAAP;AAID,C,CAED;;AACA,OAAO,SAASG,UAAT,GAAsB;AAC3B,SAAO,UAASC,QAAT,EAAmB;AACxB,WAAON,OAAO,CACXO,QADI,GAEJC,IAFI,CAECC,KAAK,IAAI;AACb;AACAH,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEJ,KAAK,CAACW,mBAAd;AAAmCD,QAAAA,KAAK,EAAEA;AAA1C,OAAD,CAAR;AACD,KALI,EAMJE,KANI,CAMEC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KARI,CAAP;AASD,GAVD;AAWD","sourcesContent":["import * as types from \"./actionTypes\";\nimport * as taskApi from \"../../api/taskApi\";\n\n// These are ACTION CREATORS for the task reducer (department) of the store\n\nexport function createTask(task) {\n  return {\n    type: types.CREATE_TASK,\n    task: task // key used is referenced in reducer\n  };\n}\n\n// returns entire array of tasks\nexport function fetchTasks() {\n  return function(dispatch) {\n    return taskApi\n      .getTasks()\n      .then(tasks => {\n        // separate action creator for successfull api call\n        dispatch({ type: types.FETCH_TASKS_SUCCESS, tasks: tasks });\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}