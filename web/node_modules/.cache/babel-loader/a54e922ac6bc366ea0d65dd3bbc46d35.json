{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do (backup-fuck-hooks)/src/components/tasks/TasksPage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as taskActions from \"../../redux/actions/taskActions\"; // import * as categoryActions from \"../../redux/actions/categoryActions\"; --> DELETE\n\nimport { bindActionCreators } from \"redux\";\nimport TaskList from \"./TaskList\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n/* Loads all tasks and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nclass TasksPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteTask = task => {\n      toast.success(\"Task deleted.\"); // optimistic delete ~ remove task from UI before API call completes\n\n      this.props.actions.deleteTask(task).catch(error => {\n        toast.error(\"Delete failed. \" + error.message, {\n          autoClose: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.fetchTasks().catch(error => {\n      alert(\"Loading tasks failed\" + error);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Tasks\"), React.createElement(Link, {\n      to: \"/task/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        marginBottom: 20\n      },\n      className: \"btn btn-primary add-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Add Task\")), React.createElement(TaskList, {\n      onDeleteClick: this.handleDeleteTask,\n      tasks: this.props.tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n} // which parts of the state (DEPARTMENTS) to expose this component via props\n\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks // categories: state.categories // ****DELETE?????\n\n  };\n}\n/* must specify the type for each prop (from mapStateToProps above)\n */\n\n\nTasksPage.propTypes = {\n  // categories: PropTypes.array.isRequired, // ***** DELETE????\n  tasks: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n}; // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchTasks: bindActionCreators(taskActions.fetchTasks, dispatch),\n      // fetchCategories: bindActionCreators(\n      //   categoryActions.fetchCategories,\n      //   dispatch\n      // ), // *** DELETE????????\n      deleteTask: bindActionCreators(taskActions.deleteTask, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksPage);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do (backup-fuck-hooks)/src/components/tasks/TasksPage.js"],"names":["React","Component","PropTypes","connect","taskActions","bindActionCreators","TaskList","toast","Link","TasksPage","handleDeleteTask","task","success","props","actions","deleteTask","catch","error","message","autoClose","componentDidMount","fetchTasks","alert","render","marginBottom","tasks","mapStateToProps","state","propTypes","array","isRequired","object","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B,C,CACA;;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;;AAGA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAOhCS,gBAPgC,GAObC,IAAI,IAAI;AACzBJ,MAAAA,KAAK,CAACK,OAAN,CAAc,eAAd,EADyB,CAEzB;;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BJ,IAA9B,EAAoCK,KAApC,CAA0CC,KAAK,IAAI;AACjDV,QAAAA,KAAK,CAACU,KAAN,CAAY,oBAAoBA,KAAK,CAACC,OAAtC,EAA+C;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA/C;AACD,OAFD;AAGD,KAb+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,KAAL,CAAWC,OAAX,CAAmBO,UAAnB,GAAgCL,KAAhC,CAAsCC,KAAK,IAAI;AAC7CK,MAAAA,KAAK,CAAC,yBAAyBL,KAA1B,CAAL;AACD,KAFD;AAGD;;AAUDM,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OADT;AAEE,MAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAHF,EAYE,oBAAC,QAAD;AACE,MAAA,aAAa,EAAE,KAAKd,gBADtB;AAEE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWY,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAmBD;;AAnC+B,C,CAsClC;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACF,KADR,CAEL;;AAFK,GAAP;AAID;AAED;;;;AAEAhB,SAAS,CAACmB,SAAV,GAAsB;AACpB;AACAH,EAAAA,KAAK,EAAEvB,SAAS,CAAC2B,KAAV,CAAgBC,UAFH;AAGpBhB,EAAAA,OAAO,EAAEZ,SAAS,CAAC6B,MAAV,CAAiBD;AAHN,CAAtB,C,CAMA;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLnB,IAAAA,OAAO,EAAE;AACPO,MAAAA,UAAU,EAAEhB,kBAAkB,CAACD,WAAW,CAACiB,UAAb,EAAyBY,QAAzB,CADvB;AAEP;AACA;AACA;AACA;AACAlB,MAAAA,UAAU,EAAEV,kBAAkB,CAACD,WAAW,CAACW,UAAb,EAAyBkB,QAAzB;AANvB;AADJ,GAAP;AAUD;;AAED,eAAe9B,OAAO,CACpBuB,eADoB,EAEpBM,kBAFoB,CAAP,CAGbvB,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as taskActions from \"../../redux/actions/taskActions\";\n// import * as categoryActions from \"../../redux/actions/categoryActions\"; --> DELETE\nimport { bindActionCreators } from \"redux\";\nimport TaskList from \"./TaskList\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\n/* Loads all tasks and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nclass TasksPage extends Component {\n  componentDidMount() {\n    this.props.actions.fetchTasks().catch(error => {\n      alert(\"Loading tasks failed\" + error);\n    });\n  }\n\n  handleDeleteTask = task => {\n    toast.success(\"Task deleted.\");\n    // optimistic delete ~ remove task from UI before API call completes\n    this.props.actions.deleteTask(task).catch(error => {\n      toast.error(\"Delete failed. \" + error.message, { autoClose: false });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Tasks</h2>\n\n        <Link to={\"/task/\"}>\n          <button\n            style={{ marginBottom: 20 }}\n            className=\"btn btn-primary add-task\"\n          >\n            Add Task\n          </button>\n        </Link>\n\n        <TaskList\n          onDeleteClick={this.handleDeleteTask}\n          tasks={this.props.tasks}\n        ></TaskList>\n      </>\n    );\n  }\n}\n\n// which parts of the state (DEPARTMENTS) to expose this component via props\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks\n    // categories: state.categories // ****DELETE?????\n  };\n}\n\n/* must specify the type for each prop (from mapStateToProps above)\n */\nTasksPage.propTypes = {\n  // categories: PropTypes.array.isRequired, // ***** DELETE????\n  tasks: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchTasks: bindActionCreators(taskActions.fetchTasks, dispatch),\n      // fetchCategories: bindActionCreators(\n      //   categoryActions.fetchCategories,\n      //   dispatch\n      // ), // *** DELETE????????\n      deleteTask: bindActionCreators(taskActions.deleteTask, dispatch)\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TasksPage);\n"]},"metadata":{},"sourceType":"module"}