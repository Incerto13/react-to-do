{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do/src/components/checklists/CompletedTasksPage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport { bindActionCreators } from \"redux\";\nimport CompletedTaskList from \"./CompletedTaskList\";\nimport { Link } from \"react-router-dom\";\n/* Loads all checklists and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nfunction CompletedTasksPage({\n  checklists\n}) {\n  useEffect(() => {\n    this.props.actions.fetchChecklists().then(() => {\n      console.log(\"checklists: \", checklists);\n    }).catch(error => {\n      alert(\"Loading checklists failed\" + error);\n    });\n  }, [checklists]);\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Completed Tasks\"), React.createElement(Link, {\n    to: \"/checklist/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: {\n      marginBottom: 20\n    },\n    className: \"btn btn-primary add-task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Add Checklist\")));\n} // which parts of the state (DEPARTMENTS) to expose this component via props\n\n\nfunction mapStateToProps(state) {\n  return {\n    checklists: state.checklists\n  };\n}\n/* must specify the type for each prop (from mapStateToProps above)\n */\n\n\nCompletedTasksPage.propTypes = {\n  checklists: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n}; // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(checklistActions.fetchChecklists, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedTasksPage);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/checklists/CompletedTasksPage.js"],"names":["React","Component","PropTypes","connect","checklistActions","bindActionCreators","CompletedTaskList","Link","CompletedTasksPage","checklists","useEffect","props","actions","fetchChecklists","then","console","log","catch","error","alert","marginBottom","mapStateToProps","state","propTypes","array","isRequired","object","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,sCAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;;AAGA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA4C;AAC1CC,EAAAA,SAAS,CAAC,MAAM;AACd,SAAKC,KAAL,CAAWC,OAAX,CACGC,eADH,GAEGC,IAFH,CAEQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,UAA5B;AACD,KAJH,EAKGQ,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,KAAK,CAAC,8BAA8BD,KAA/B,CAAL;AACD,KAPH;AAQD,GATQ,EASN,CAACT,UAAD,CATM,CAAT;AAWA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAAEW,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAHF,CADF;AAmBD,C,CAED;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLb,IAAAA,UAAU,EAAEa,KAAK,CAACb;AADb,GAAP;AAGD;AAED;;;;AAEAD,kBAAkB,CAACe,SAAnB,GAA+B;AAC7Bd,EAAAA,UAAU,EAAEP,SAAS,CAACsB,KAAV,CAAgBC,UADC;AAE7Bb,EAAAA,OAAO,EAAEV,SAAS,CAACwB,MAAV,CAAiBD;AAFG,CAA/B,C,CAKA;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLhB,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAER,kBAAkB,CACjCD,gBAAgB,CAACS,eADgB,EAEjCe,QAFiC;AAD5B;AADJ,GAAP;AAQD;;AAED,eAAezB,OAAO,CACpBkB,eADoB,EAEpBM,kBAFoB,CAAP,CAGbnB,kBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport { bindActionCreators } from \"redux\";\nimport CompletedTaskList from \"./CompletedTaskList\";\nimport { Link } from \"react-router-dom\";\n\n/* Loads all checklists and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nfunction CompletedTasksPage({ checklists }) {\n  useEffect(() => {\n    this.props.actions\n      .fetchChecklists()\n      .then(() => {\n        console.log(\"checklists: \", checklists);\n      })\n      .catch(error => {\n        alert(\"Loading checklists failed\" + error);\n      });\n  }, [checklists]);\n\n  return (\n    <>\n      <h2>Completed Tasks</h2>\n\n      <Link to={\"/checklist/\"}>\n        <button\n          style={{ marginBottom: 20 }}\n          className=\"btn btn-primary add-task\"\n        >\n          Add Checklist\n        </button>\n      </Link>\n\n      {/* <ChecklistList\n          onDeleteClick={this.handleDeleteChecklist}\n          checklists={this.props.checklists}\n        ></ChecklistList> */}\n    </>\n  );\n}\n\n// which parts of the state (DEPARTMENTS) to expose this component via props\nfunction mapStateToProps(state) {\n  return {\n    checklists: state.checklists\n  };\n}\n\n/* must specify the type for each prop (from mapStateToProps above)\n */\nCompletedTasksPage.propTypes = {\n  checklists: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(\n        checklistActions.fetchChecklists,\n        dispatch\n      )\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompletedTasksPage);\n"]},"metadata":{},"sourceType":"module"}