{"ast":null,"code":"import { useEffect, useRef } from \"react\"; // returns last version of value only after it has changed\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default usePrevious;","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/custom_hooks/usePrevious.js"],"names":["useEffect","useRef","usePrevious","value","ref","current"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC,C,CAEA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,GAAG,GAAGH,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD,GAFQ,CAAT;AAGA,SAAOC,GAAG,CAACC,OAAX;AACD;;AAED,eAAeH,WAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\n\n// returns last version of value only after it has changed\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default usePrevious;\n"]},"metadata":{},"sourceType":"module"}