{"ast":null,"code":"import _objectSpread from \"/home/akin/dev/JS/react/Projects/to-do/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do/src/components/TaskForm.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as taskActions from \"../redux/actions/taskActions\";\nimport { bindActionCreators } from \"redux\";\n\nclass TaskForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: {\n        title: \"\",\n        body: \"\"\n      }\n    };\n\n    this.handleChange = event => {\n      const task = _objectSpread({}, this.state.task, {\n        title: event.target.value,\n        body: event.target.value\n      });\n\n      this.setState({\n        task\n      }); // this.setState({ [event.target.name]: event.target.value });\n      // const { name, value } = event.target;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.actions.createTask(this.state.task);\n    };\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const task = {\n      title: this.state.title,\n      body: this.state.body\n    };\n    this.props.createTask(task); // clear the form after submission [may have a race condigion here!!!]\n\n    this.setState({\n      title: \"\",\n      body: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Add Task\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Title: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.task.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Body :\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      value: this.state.task.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nTaskForm.propTypes = {\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(taskActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/TaskForm.js"],"names":["React","Component","PropTypes","connect","taskActions","bindActionCreators","TaskForm","state","task","title","body","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","actions","createTask","onSubmit","render","propTypes","object","isRequired","mapStateToProps","tasks","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as taskActions from \"../redux/actions/taskActions\";\nimport { bindActionCreators } from \"redux\";\n\nclass TaskForm extends Component {\n  state = {\n    task: {\n      title: \"\",\n      body: \"\"\n    }\n  };\n\n  handleChange = event => {\n    const task = {\n      ...this.state.task,\n      title: event.target.value,\n      body: event.target.value\n    };\n    this.setState({ task });\n\n    // this.setState({ [event.target.name]: event.target.value });\n\n    // const { name, value } = event.target;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.actions.createTask(this.state.task);\n  };\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const task = {\n      title: this.state.title,\n      body: this.state.body\n    };\n    this.props.createTask(task);\n    // clear the form after submission [may have a race condigion here!!!]\n    this.setState({\n      title: \"\",\n      body: \"\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Add Task</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>Title: </label>\n            <br />\n            <input\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.task.title}\n            />\n          </div>\n          <br />\n          <div>\n            <label>Body :</label>\n            <br />\n            <textarea\n              onChange={this.handleChange}\n              value={this.state.task.body}\n            />\n          </div>\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nTaskForm.propTypes = {\n  actions: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(taskActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskForm);\n"]},"metadata":{},"sourceType":"module"}