{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do/src/components/home/HomePage.js\";\n// import React, { useState, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import * as checklistActions from \"../../redux/actions/checklistActions\";\n// import { bindActionCreators } from \"redux\";\n// import CompletedTaskList from \"../checklists/CompletedTaskList\";\n// function HomePage({ checklists, ...props }) {\n//   const [completedTasks, setCompletedTasks] = useState([]);\n//   useEffect(() => {\n//     if (checklists.length === 0) {\n//       props.actions.fetchChecklists().catch(error => {\n//         alert(\"Loading checklists failed\" + error);\n//       });\n//     } else {\n//       // set checklist in local state to update when prop updates\n//       const newCompletedTasks = [];\n//       for (let checklist of checklists) {\n//         for (let task of checklist.tasks) {\n//           if (task.completed === true) {\n//             newCompletedTasks.push({\n//               checklistId: checklist.id,\n//               checklistTitle: checklist.title,\n//               checklistSlug: checklist.slug,\n//               taskId: task.id,\n//               taskTitle: task.title,\n//               body: task.body,\n//               category: task.category,\n//               timeOfCompletion: task.timeOfCompletion\n//             });\n//           }\n//         }\n//       }\n//       newCompletedTasks.sort((a, b) => {\n//         return b.timeOfCompletion - a.timeOfCompletion;\n//       });\n//       setCompletedTasks(newCompletedTasks);\n//     }\n//   }, [checklists, checklists.length, props.actions, props.checklists]);\n//   return (\n//     <>\n//       <div className=\"jumbotron\">\n//         <h1>Akin's (Redux) To-Do App</h1>\n//         <p>There are to-do apps and then there are to-do apps...</p>\n//       </div>\n//       <h2>Completed Tasks</h2>\n//       <CompletedTaskList completedTasks={completedTasks}></CompletedTaskList>\n//     </>\n//   );\n// }\n// // which parts of the state (DEPARTMENTS) to expose this component via props\n// function mapStateToProps(state) {\n//   return {\n//     checklists: state.checklists\n//   };\n// }\n// /* must specify the type for each prop (from mapStateToProps above)\n//  */\n// HomePage.propTypes = {\n//   checklists: PropTypes.array.isRequired,\n//   actions: PropTypes.object.isRequired\n// };\n// // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     actions: {\n//       fetchChecklists: bindActionCreators(\n//         checklistActions.fetchChecklists,\n//         dispatch\n//       )\n//     }\n//   };\n// }\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(HomePage);\nimport React from \"react\";\nimport CompletedTasksPage from \"../checklists/CompletedTasksPage\";\n\nconst HomePage = () => React.createElement(\"div\", {\n  className: \"jumbotron\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, \"Akin's (Redux) To-Do App\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, \"There are to-do apps and then there are to-do apps...\"), React.createElement(CompletedTasksPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}));\n\nexport default HomePage;","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/home/HomePage.js"],"names":["React","CompletedTasksPage","HomePage"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAEA,MAAMC,QAAQ,GAAG,MACf;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAFF,EAGE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF;;AAQA,eAAeA,QAAf","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import * as checklistActions from \"../../redux/actions/checklistActions\";\n// import { bindActionCreators } from \"redux\";\n// import CompletedTaskList from \"../checklists/CompletedTaskList\";\n\n// function HomePage({ checklists, ...props }) {\n//   const [completedTasks, setCompletedTasks] = useState([]);\n\n//   useEffect(() => {\n//     if (checklists.length === 0) {\n//       props.actions.fetchChecklists().catch(error => {\n//         alert(\"Loading checklists failed\" + error);\n//       });\n//     } else {\n//       // set checklist in local state to update when prop updates\n//       const newCompletedTasks = [];\n//       for (let checklist of checklists) {\n//         for (let task of checklist.tasks) {\n//           if (task.completed === true) {\n//             newCompletedTasks.push({\n//               checklistId: checklist.id,\n//               checklistTitle: checklist.title,\n//               checklistSlug: checklist.slug,\n//               taskId: task.id,\n//               taskTitle: task.title,\n//               body: task.body,\n//               category: task.category,\n//               timeOfCompletion: task.timeOfCompletion\n//             });\n//           }\n//         }\n//       }\n\n//       newCompletedTasks.sort((a, b) => {\n//         return b.timeOfCompletion - a.timeOfCompletion;\n//       });\n\n//       setCompletedTasks(newCompletedTasks);\n//     }\n//   }, [checklists, checklists.length, props.actions, props.checklists]);\n\n//   return (\n//     <>\n//       <div className=\"jumbotron\">\n//         <h1>Akin's (Redux) To-Do App</h1>\n//         <p>There are to-do apps and then there are to-do apps...</p>\n//       </div>\n\n//       <h2>Completed Tasks</h2>\n\n//       <CompletedTaskList completedTasks={completedTasks}></CompletedTaskList>\n//     </>\n//   );\n// }\n\n// // which parts of the state (DEPARTMENTS) to expose this component via props\n// function mapStateToProps(state) {\n//   return {\n//     checklists: state.checklists\n//   };\n// }\n\n// /* must specify the type for each prop (from mapStateToProps above)\n//  */\n// HomePage.propTypes = {\n//   checklists: PropTypes.array.isRequired,\n//   actions: PropTypes.object.isRequired\n// };\n\n// // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n// function mapDispatchToProps(dispatch) {\n//   return {\n//     actions: {\n//       fetchChecklists: bindActionCreators(\n//         checklistActions.fetchChecklists,\n//         dispatch\n//       )\n//     }\n//   };\n// }\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(HomePage);\n\nimport React from \"react\";\nimport CompletedTasksPage from \"../checklists/CompletedTasksPage\";\n\nconst HomePage = () => (\n  <div className=\"jumbotron\">\n    <h1>Akin's (Redux) To-Do App</h1>\n    <p>There are to-do apps and then there are to-do apps...</p>\n    <CompletedTasksPage />\n  </div>\n);\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}