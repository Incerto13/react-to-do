{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do/src/components/tasks/TaskForm.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"../common/TextInput\";\nimport SelectInput from \"../common/SelectInput\";\n\nconst TaskForm = ({\n  task,\n  categories,\n  onSave,\n  onChange,\n  saving = false,\n  errors = {}\n}) => {\n  return React.createElement(\"form\", {\n    onSubmit: onSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, task.id ? \"Edit\" : \"Add\", \" Task\"), errors.onSave && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, errors.onSave), React.createElement(TextInput, {\n    name: \"title\",\n    label: \"Title\",\n    value: task.title,\n    onChange: onChange,\n    error: errors.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(SelectInput, {\n    name: \"category\",\n    label: \"Category\",\n    value: task.category,\n    defaultOption: \"Select Category\",\n    options: categories.map(category => ({\n      value: category.name,\n      text: category.name\n    })),\n    onChange: onChange,\n    error: errors.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    name: \"body\",\n    label: \"Body\",\n    value: task.body,\n    onChange: onChange,\n    error: errors.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: saving,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, saving ? \"Saving...\" : \"Save\"));\n};\n\nTaskForm.propTypes = {\n  categories: PropTypes.array.isRequired,\n  task: PropTypes.object.isRequired,\n  errors: PropTypes.object,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  saving: PropTypes.bool\n};\nexport default TaskForm;","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/tasks/TaskForm.js"],"names":["React","PropTypes","TextInput","SelectInput","TaskForm","task","categories","onSave","onChange","saving","errors","id","title","category","map","value","name","text","body","propTypes","array","isRequired","object","func","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,UAFgB;AAGhBC,EAAAA,MAHgB;AAIhBC,EAAAA,QAJgB;AAKhBC,EAAAA,MAAM,GAAG,KALO;AAMhBC,EAAAA,MAAM,GAAG;AANO,CAAD,KAOX;AACJ,SACE;AAAM,IAAA,QAAQ,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACM,EAAL,GAAU,MAAV,GAAmB,KAAxB,UADF,EAEGD,MAAM,CAACH,MAAP,IACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACH,MADV,CAHJ,EAOE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,KAAK,EAAEF,IAAI,CAACO,KAHd;AAIE,IAAA,QAAQ,EAAEJ,QAJZ;AAKE,IAAA,KAAK,EAAEE,MAAM,CAACE,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAeE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,KAAK,EAAEP,IAAI,CAACQ,QAHd;AAIE,IAAA,aAAa,EAAC,iBAJhB;AAKE,IAAA,OAAO,EAAEP,UAAU,CAACQ,GAAX,CAAeD,QAAQ,KAAK;AACnCE,MAAAA,KAAK,EAAEF,QAAQ,CAACG,IADmB;AAEnCC,MAAAA,IAAI,EAAEJ,QAAQ,CAACG;AAFoB,KAAL,CAAvB,CALX;AASE,IAAA,QAAQ,EAAER,QATZ;AAUE,IAAA,KAAK,EAAEE,MAAM,CAACG,QAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EA4BE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,KAAK,EAAER,IAAI,CAACa,IAHd;AAIE,IAAA,QAAQ,EAAEV,QAJZ;AAKE,IAAA,KAAK,EAAEE,MAAM,CAACQ,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,EAoCE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAET,MAAhC;AAAwC,IAAA,SAAS,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,GAAG,WAAH,GAAiB,MAD1B,CApCF,CADF;AA0CD,CAlDD;;AAoDAL,QAAQ,CAACe,SAAT,GAAqB;AACnBb,EAAAA,UAAU,EAAEL,SAAS,CAACmB,KAAV,CAAgBC,UADT;AAEnBhB,EAAAA,IAAI,EAAEJ,SAAS,CAACqB,MAAV,CAAiBD,UAFJ;AAGnBX,EAAAA,MAAM,EAAET,SAAS,CAACqB,MAHC;AAInBf,EAAAA,MAAM,EAAEN,SAAS,CAACsB,IAAV,CAAeF,UAJJ;AAKnBb,EAAAA,QAAQ,EAAEP,SAAS,CAACsB,IAAV,CAAeF,UALN;AAMnBZ,EAAAA,MAAM,EAAER,SAAS,CAACuB;AANC,CAArB;AASA,eAAepB,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"../common/TextInput\";\nimport SelectInput from \"../common/SelectInput\";\n\nconst TaskForm = ({\n  task,\n  categories,\n  onSave,\n  onChange,\n  saving = false,\n  errors = {}\n}) => {\n  return (\n    <form onSubmit={onSave}>\n      <h2>{task.id ? \"Edit\" : \"Add\"} Task</h2>\n      {errors.onSave && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errors.onSave}\n        </div>\n      )}\n      <TextInput\n        name=\"title\"\n        label=\"Title\"\n        value={task.title}\n        onChange={onChange}\n        error={errors.title}\n      />\n\n      <SelectInput\n        name=\"category\"\n        label=\"Category\"\n        value={task.category}\n        defaultOption=\"Select Category\"\n        options={categories.map(category => ({\n          value: category.name,\n          text: category.name\n        }))}\n        onChange={onChange}\n        error={errors.category}\n      />\n\n      <TextInput\n        name=\"body\"\n        label=\"Body\"\n        value={task.body}\n        onChange={onChange}\n        error={errors.body}\n      />\n\n      <button type=\"submit\" disabled={saving} className=\"btn btn-primary\">\n        {saving ? \"Saving...\" : \"Save\"}\n      </button>\n    </form>\n  );\n};\n\nTaskForm.propTypes = {\n  categories: PropTypes.array.isRequired,\n  task: PropTypes.object.isRequired,\n  errors: PropTypes.object,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  saving: PropTypes.bool\n};\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}