{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do (backup-fuck-hooks)/src/components/checklists/ChecklistTaskView.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // Note, tasks within checklists are different and un-related to standalone tasks module\n\nconst ChecklistTaskView = props => {\n  const tasks = props.tasks,\n        onTaskToggle = props.onTaskToggle;\n  return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Task\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Body\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, tasks.map((task, index) => {\n    return React.createElement(\"tr\", {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, task.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, task.body), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, task.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: !task.completed ? \"btn btn-outline-success\" : \"btn btn-success\",\n      onClick: event => onTaskToggle(event, task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, !task.completed ? \"Incomplete\" : \"Completed\")));\n  }))));\n};\n\nChecklistTaskView.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  onTaskToggle: PropTypes.func.isRequired\n};\nexport default ChecklistTaskView;","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do (backup-fuck-hooks)/src/components/checklists/ChecklistTaskView.js"],"names":["React","PropTypes","ChecklistTaskView","props","tasks","onTaskToggle","map","task","index","id","title","body","category","completed","event","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAAA,QACzBC,KADyB,GACDD,KADC,CACzBC,KADyB;AAAA,QAClBC,YADkB,GACDF,KADC,CAClBE,YADkB;AAGjC,SACE,0CACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,WACE;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,IAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACK,QAAV,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EACP,CAACL,IAAI,CAACM,SAAN,GACI,yBADJ,GAEI,iBAJR;AAME,MAAA,OAAO,EAAEC,KAAK,IAAIT,YAAY,CAACS,KAAD,EAAQP,IAAR,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,CAACA,IAAI,CAACM,SAAN,GAAkB,YAAlB,GAAiC,WARpC,CADF,CALF,CADF;AAoBD,GArBA,CADH,CAVF,CADF,CADF;AAuCD,CA1CD;;AA4CAX,iBAAiB,CAACa,SAAlB,GAA8B;AAC5BX,EAAAA,KAAK,EAAEH,SAAS,CAACe,KAAV,CAAgBC,UADK;AAE5BZ,EAAAA,YAAY,EAAEJ,SAAS,CAACiB,IAAV,CAAeD;AAFD,CAA9B;AAKA,eAAef,iBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Note, tasks within checklists are different and un-related to standalone tasks module\n\nconst ChecklistTaskView = props => {\n  const { tasks, onTaskToggle } = props;\n\n  return (\n    <>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th />\n            <th>Task</th>\n            <th>Body</th>\n            <th>Category</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task, index) => {\n            return (\n              <tr key={task.id}>\n                <td></td>\n                <td>{task.title}</td>\n                <td>{task.body}</td>\n                <td>{task.category}</td>\n                <td>\n                  <button\n                    className={\n                      !task.completed\n                        ? \"btn btn-outline-success\"\n                        : \"btn btn-success\"\n                    }\n                    onClick={event => onTaskToggle(event, task)}\n                  >\n                    {!task.completed ? \"Incomplete\" : \"Completed\"}\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nChecklistTaskView.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  onTaskToggle: PropTypes.func.isRequired\n};\n\nexport default ChecklistTaskView;\n"]},"metadata":{},"sourceType":"module"}