{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do (backup-fuck-hooks)/src/components/checklists/ChecklistForm.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"../common/TextInput\";\nimport SelectInput from \"../common/SelectInput\";\nimport \"./ChecklistForm.css\";\n/* This form handles Adding and Editing an existing form based\non whether or not there is an id present\n*/\n\nconst ChecklistForm = ({\n  checklist,\n  tasks,\n  categories,\n  handleAddTask,\n  handleDeleteTask,\n  onSave,\n  onChange,\n  saving = false,\n  errors = {}\n}) => {\n  return React.createElement(\"form\", {\n    className: \"body\",\n    onSubmit: onSave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, checklist.id ? \"Edit\" : \"Add\", \" Checklist\"), errors.onSave && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, errors.onSave), React.createElement(TextInput, {\n    name: \"title\",\n    label: \"Checklist Title\",\n    value: checklist.title,\n    onChange: onChange,\n    error: errors.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Tasks\"), tasks.map((task, index) => {\n    return React.createElement(\"div\", {\n      className: \"task\",\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"# \", index), React.createElement(\"button\", {\n      className: \"delete-task-button btn btn-danger btn-lg\",\n      type: \"button\",\n      onClick: event => handleDeleteTask(event, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"-\"), React.createElement(TextInput, {\n      name: \"title\",\n      label: \"Task Title\",\n      value: task.title,\n      onChange: event => onChange(event, index),\n      error: errors.titles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      name: \"body\",\n      label: \"Body\",\n      value: task.body,\n      onChange: event => onChange(event, index),\n      error: errors.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(SelectInput, {\n      name: \"category\",\n      label: \"Category\",\n      value: task.category,\n      defaultOption: \"Select Category\",\n      options: categories.map(category => ({\n        value: category.name,\n        text: category.name\n      })),\n      onChange: event => onChange(event, index),\n      error: errors.categories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }), React.createElement(\"button\", {\n    className: \"btn btn-info btn-lg add-task-button\",\n    type: \"button\",\n    onClick: handleAddTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: saving,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, saving ? \"Saving...\" : \"Save\"));\n};\n\nChecklistForm.propTypes = {\n  categories: PropTypes.array.isRequired,\n  checklist: PropTypes.object.isRequired,\n  tasks: PropTypes.array.isRequired,\n  errors: PropTypes.object,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  saving: PropTypes.bool\n};\nexport default ChecklistForm;","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do (backup-fuck-hooks)/src/components/checklists/ChecklistForm.js"],"names":["React","PropTypes","TextInput","SelectInput","ChecklistForm","checklist","tasks","categories","handleAddTask","handleDeleteTask","onSave","onChange","saving","errors","id","title","map","task","index","event","titles","body","category","value","name","text","propTypes","array","isRequired","object","func","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"../common/TextInput\";\nimport SelectInput from \"../common/SelectInput\";\nimport \"./ChecklistForm.css\";\n\n/* This form handles Adding and Editing an existing form based\non whether or not there is an id present\n*/\n\nconst ChecklistForm = ({\n  checklist,\n  tasks,\n  categories,\n  handleAddTask,\n  handleDeleteTask,\n  onSave,\n  onChange,\n  saving = false,\n  errors = {}\n}) => {\n  return (\n    <form className=\"body\" onSubmit={onSave}>\n      <h2>{checklist.id ? \"Edit\" : \"Add\"} Checklist</h2>\n      {errors.onSave && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errors.onSave}\n        </div>\n      )}\n\n      <TextInput\n        name=\"title\"\n        label=\"Checklist Title\"\n        value={checklist.title}\n        onChange={onChange}\n        error={errors.title}\n      />\n\n      <h3>Tasks</h3>\n      {tasks.map((task, index) => {\n        return (\n          <div className=\"task\" key={task.id}>\n            <div>\n              <h4># {index}</h4>\n              <button\n                className=\"delete-task-button btn btn-danger btn-lg\"\n                type=\"button\"\n                onClick={event => handleDeleteTask(event, index)}\n              >\n                -\n              </button>\n              <TextInput\n                name=\"title\"\n                label=\"Task Title\"\n                value={task.title}\n                onChange={event => onChange(event, index)}\n                error={errors.titles}\n              />\n\n              <TextInput\n                name=\"body\"\n                label=\"Body\"\n                value={task.body}\n                onChange={event => onChange(event, index)}\n                error={errors.body}\n              />\n\n              <SelectInput\n                name=\"category\"\n                label=\"Category\"\n                value={task.category}\n                defaultOption=\"Select Category\"\n                options={categories.map(category => ({\n                  value: category.name,\n                  text: category.name\n                }))}\n                onChange={event => onChange(event, index)}\n                error={errors.categories}\n              />\n            </div>\n          </div>\n        );\n      })}\n\n      <button\n        className=\"btn btn-info btn-lg add-task-button\"\n        type=\"button\"\n        onClick={handleAddTask}\n      >\n        +\n      </button>\n\n      <button type=\"submit\" disabled={saving} className=\"btn btn-primary\">\n        {saving ? \"Saving...\" : \"Save\"}\n      </button>\n    </form>\n  );\n};\n\nChecklistForm.propTypes = {\n  categories: PropTypes.array.isRequired,\n  checklist: PropTypes.object.isRequired,\n  tasks: PropTypes.array.isRequired,\n  errors: PropTypes.object,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  saving: PropTypes.bool\n};\n\nexport default ChecklistForm;\n"]},"metadata":{},"sourceType":"module"}