{"ast":null,"code":"import _objectSpread from \"/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n/* Since whatever is returned from the api will simply replace what was in our state,\nall you have to do is return the tasks in the fetch action.\nRemember, whatever you return from the reducer becomes the new state.  \n*/\n\nexport default function taskReducer(state = initialState.tasks, action) {\n  switch (action.type) {\n    case types.FETCH_TASKS_SUCCESS:\n      // types bc that's what we call the import above\n      return action.tasks;\n    // as\n\n    case types.CREATE_TASK:\n      return [...state, _objectSpread({}, action.task)];\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/redux/reducers/taskReducer.js"],"names":["types","initialState","taskReducer","state","tasks","action","type","FETCH_TASKS_SUCCESS","CREATE_TASK","task"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA;;;;;AAIA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGF,YAAY,CAACG,KAA1C,EAAiDC,MAAjD,EAAyD;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,mBAAX;AAAgC;AAC9B,aAAOF,MAAM,CAACD,KAAd;AAAqB;;AACvB,SAAKJ,KAAK,CAACQ,WAAX;AACE,aAAO,CAAC,GAAGL,KAAJ,oBAAgBE,MAAM,CAACI,IAAvB,EAAP;;AACF;AACE,aAAON,KAAP;AANJ;AAQD","sourcesContent":["import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\n/* Since whatever is returned from the api will simply replace what was in our state,\nall you have to do is return the tasks in the fetch action.\nRemember, whatever you return from the reducer becomes the new state.  \n*/\nexport default function taskReducer(state = initialState.tasks, action) {\n  switch (action.type) {\n    case types.FETCH_TASKS_SUCCESS: // types bc that's what we call the import above\n      return action.tasks; // as\n    case types.CREATE_TASK:\n      return [...state, { ...action.task }];\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}