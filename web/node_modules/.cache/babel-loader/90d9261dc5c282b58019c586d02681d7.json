{"ast":null,"code":"import { handleResponse, handleError } from \"./apiUtils\";\nconst catUrl = \"http://localhost:3001\" + \"/categories/\";\nexport function getCategories() {\n  // fetch defaults to \"GET\" method\n  return fetch(catUrl).then(handleResponse).catch(handleError);\n} // export function saveTask(task) {\n//   return fetch(baseUrl + (task.id || \"\"), {\n//     method: task.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n//     headers: { \"content-type\": \"application/json\" },\n//     body: JSON.stringify(task)\n//   })\n//     .then(handleResponse)\n//     .catch(handleError);\n// }\n// // Redux-THunk  = Async Middleware\n// /* with thunk you don't have to pass dispatch or state as arguments\n// they are injected for us by the thunk middleware\n// without thunk, the signatures of these methods would differ depending on\n// whether or not they were synchronous or asynchronous */\n// export function deleteTask(taskId) {\n//   return fetch(baseUrl + taskId, { method: \"DELETE\" })\n//     .then(handleResponse)\n//     .catch(handleError);\n// }","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/api/categoryApi.js"],"names":["handleResponse","handleError","catUrl","getCategories","fetch","then","catch"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,YAA5C;AACA,MAAMC,MAAM,GAAG,0BAA0B,cAAzC;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B;AACA,SAAOC,KAAK,CAACF,MAAD,CAAL,CACJG,IADI,CACCL,cADD,EAEJM,KAFI,CAEEL,WAFF,CAAP;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { handleResponse, handleError } from \"./apiUtils\";\nconst catUrl = \"http://localhost:3001\" + \"/categories/\";\n\nexport function getCategories() {\n  // fetch defaults to \"GET\" method\n  return fetch(catUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\n// export function saveTask(task) {\n//   return fetch(baseUrl + (task.id || \"\"), {\n//     method: task.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n//     headers: { \"content-type\": \"application/json\" },\n//     body: JSON.stringify(task)\n//   })\n//     .then(handleResponse)\n//     .catch(handleError);\n// }\n\n// // Redux-THunk  = Async Middleware\n// /* with thunk you don't have to pass dispatch or state as arguments\n// they are injected for us by the thunk middleware\n// without thunk, the signatures of these methods would differ depending on\n// whether or not they were synchronous or asynchronous */\n// export function deleteTask(taskId) {\n//   return fetch(baseUrl + taskId, { method: \"DELETE\" })\n//     .then(handleResponse)\n//     .catch(handleError);\n// }\n"]},"metadata":{},"sourceType":"module"}