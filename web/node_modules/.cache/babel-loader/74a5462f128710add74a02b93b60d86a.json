{"ast":null,"code":"import _objectSpread from \"/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/components/tasks/TasksPage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as taskActions from \"../../redux/actions/taskActions\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport { bindActionCreators } from \"redux\";\nimport TaskList from \"./TaskForm\";\n\nclass TasksPage extends Component {\n  componentDidMount() {\n    this.props.actions.fetchTasks().catch(error => {\n      alert(\"Loading tasks failed\" + error);\n    });\n    this.props.actions.fetchCategories().catch(error => {\n      alert(\"Loading categories failed\" + error);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Tasks\"), React.createElement(TaskList, {\n      tasks: this.props.tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n} // which parts of the state (DEPARTMENTS) to expose this component via props\n\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.categories.length === 0 // make sure categories were loaded\n    ? [] : state.tasks.map(task => {\n      return _objectSpread({}, task, {\n        category: state.category.find(category => category === task.category)\n      });\n    }),\n    categories: state.categories\n  };\n}\n/* must specify the type for each prop (from mapStateToProps above)\n */\n\n\nTasksPage.propTypes = {\n  categories: PropTypes.array.isRequired,\n  tasks: PropTypes.array.isRequired,\n  actions: PropTypes.func.isRequired\n}; // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchTasks: bindActionCreators(taskActions.fetchTasks, dispatch),\n      fetchCategories: bindActionCreators(categoryActions.fetchCategories, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksPage);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/components/tasks/TasksPage.js"],"names":["React","Component","PropTypes","connect","taskActions","categoryActions","bindActionCreators","TaskList","TasksPage","componentDidMount","props","actions","fetchTasks","catch","error","alert","fetchCategories","render","tasks","mapStateToProps","state","categories","length","map","task","category","find","propTypes","array","isRequired","func","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AACA,OAAO,KAAKC,eAAZ,MAAiC,qCAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,GAAgCC,KAAhC,CAAsCC,KAAK,IAAI;AAC7CC,MAAAA,KAAK,CAAC,yBAAyBD,KAA1B,CAAL;AACD,KAFD;AAIA,SAAKJ,KAAL,CAAWC,OAAX,CAAmBK,eAAnB,GAAqCH,KAArC,CAA2CC,KAAK,IAAI;AAClDC,MAAAA,KAAK,CAAC,8BAA8BD,KAA/B,CAAL;AACD,KAFD;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAlB+B,C,CAqBlC;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,KAAK,EACHE,KAAK,CAACC,UAAN,CAAiBC,MAAjB,KAA4B,CAA5B,CAA8B;AAA9B,MACI,EADJ,GAEIF,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,IAAI,IAAI;AACtB,+BACKA,IADL;AAEEC,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeC,IAAf,CACRD,QAAQ,IAAIA,QAAQ,KAAKD,IAAI,CAACC,QADtB;AAFZ;AAMD,KAPD,CAJD;AAYLJ,IAAAA,UAAU,EAAED,KAAK,CAACC;AAZb,GAAP;AAcD;AAED;;;;AAEAb,SAAS,CAACmB,SAAV,GAAsB;AACpBN,EAAAA,UAAU,EAAEnB,SAAS,CAAC0B,KAAV,CAAgBC,UADR;AAEpBX,EAAAA,KAAK,EAAEhB,SAAS,CAAC0B,KAAV,CAAgBC,UAFH;AAGpBlB,EAAAA,OAAO,EAAET,SAAS,CAAC4B,IAAV,CAAeD;AAHJ,CAAtB,C,CAMA;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLrB,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAEN,kBAAkB,CAACF,WAAW,CAACQ,UAAb,EAAyBoB,QAAzB,CADvB;AAEPhB,MAAAA,eAAe,EAAEV,kBAAkB,CACjCD,eAAe,CAACW,eADiB,EAEjCgB,QAFiC;AAF5B;AADJ,GAAP;AASD;;AAED,eAAe7B,OAAO,CACpBgB,eADoB,EAEpBY,kBAFoB,CAAP,CAGbvB,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as taskActions from \"../../redux/actions/taskActions\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport { bindActionCreators } from \"redux\";\nimport TaskList from \"./TaskForm\";\n\nclass TasksPage extends Component {\n  componentDidMount() {\n    this.props.actions.fetchTasks().catch(error => {\n      alert(\"Loading tasks failed\" + error);\n    });\n\n    this.props.actions.fetchCategories().catch(error => {\n      alert(\"Loading categories failed\" + error);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <h2>Tasks</h2>\n        <TaskList tasks={this.props.tasks}></TaskList>\n      </>\n    );\n  }\n}\n\n// which parts of the state (DEPARTMENTS) to expose this component via props\nfunction mapStateToProps(state) {\n  return {\n    tasks:\n      state.categories.length === 0 // make sure categories were loaded\n        ? []\n        : state.tasks.map(task => {\n            return {\n              ...task,\n              category: state.category.find(\n                category => category === task.category\n              )\n            };\n          }),\n    categories: state.categories\n  };\n}\n\n/* must specify the type for each prop (from mapStateToProps above)\n */\nTasksPage.propTypes = {\n  categories: PropTypes.array.isRequired,\n  tasks: PropTypes.array.isRequired,\n  actions: PropTypes.func.isRequired\n};\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchTasks: bindActionCreators(taskActions.fetchTasks, dispatch),\n      fetchCategories: bindActionCreators(\n        categoryActions.fetchCategories,\n        dispatch\n      )\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TasksPage);\n"]},"metadata":{},"sourceType":"module"}