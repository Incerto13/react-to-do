{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/components/TaskList.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchTasks } from \"../redux/actions/taskActions\";\n\nclass TaskList extends Component {\n  componentWillMount() {\n    this.props.fetchTasks();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.newTask !== prevProps.newTask) {\n      this.props.fetchTasks();\n    }\n  }\n\n  render() {\n    const taskItems = this.props.tasks.map(task => React.createElement(\"div\", {\n      className: \"task\",\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, task.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, task.body)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Task List\"), taskItems);\n  }\n\n}\n\nTaskList.propTypes = {\n  fetchTasks: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n  newTask: PropTypes.object // not required bc you're not always adding a task\n\n}; //** maybe change this to a function (like Cory did) and add mapDispatchToProps???\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks.items,\n  newTask: state.tasks.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TaskList);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/components/TaskList.js"],"names":["React","Component","PropTypes","connect","fetchTasks","TaskList","componentWillMount","props","componentDidUpdate","prevProps","newTask","render","taskItems","tasks","map","task","id","title","body","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKF,KAAL,CAAWG,OAAX,KAAuBD,SAAS,CAACC,OAArC,EAA8C;AAC5C,WAAKH,KAAL,CAAWH,UAAX;AACD;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IACzC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAFF,CADgB,CAAlB;AAOA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGN,SAFH,CADF;AAMD;;AAzB8B;;AA4BjCP,QAAQ,CAACc,SAAT,GAAqB;AACnBf,EAAAA,UAAU,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADR;AAEnBR,EAAAA,KAAK,EAAEX,SAAS,CAACoB,KAAV,CAAgBD,UAFJ;AAGnBX,EAAAA,OAAO,EAAER,SAAS,CAACqB,MAHA,CAGO;;AAHP,CAArB,C,CAMA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCZ,EAAAA,KAAK,EAAEY,KAAK,CAACZ,KAAN,CAAYa,KADa;AAEhChB,EAAAA,OAAO,EAAEe,KAAK,CAACZ,KAAN,CAAYc;AAFW,CAAL,CAA7B;;AAKA,eAAexB,OAAO,CACpBqB,eADoB,EAEpB;AAAEpB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchTasks } from \"../redux/actions/taskActions\";\n\nclass TaskList extends Component {\n  componentWillMount() {\n    this.props.fetchTasks();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.newTask !== prevProps.newTask) {\n      this.props.fetchTasks();\n    }\n  }\n\n  render() {\n    const taskItems = this.props.tasks.map(task => (\n      <div className=\"task\" key={task.id}>\n        <h3>{task.title}</h3>\n        <p>{task.body}</p>\n      </div>\n    ));\n\n    return (\n      <div>\n        <h1>Task List</h1>\n        {taskItems}\n      </div>\n    );\n  }\n}\n\nTaskList.propTypes = {\n  fetchTasks: PropTypes.func.isRequired,\n  tasks: PropTypes.array.isRequired,\n  newTask: PropTypes.object // not required bc you're not always adding a task\n};\n\n//** maybe change this to a function (like Cory did) and add mapDispatchToProps???\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks.items,\n  newTask: state.tasks.item\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(TaskList);\n"]},"metadata":{},"sourceType":"module"}