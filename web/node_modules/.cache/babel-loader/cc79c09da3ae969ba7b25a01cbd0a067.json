{"ast":null,"code":"import _objectSpread from \"/home/akin/dev/JS/react/Projects/to-do/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/akin/dev/JS/react/Projects/to-do/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"/home/akin/dev/JS/react/Projects/to-do/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do/src/components/checklists/CompletedTasksPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport { bindActionCreators } from \"redux\";\nimport CompletedTaskList from \"./CompletedTaskList\";\nimport { Link } from \"react-router-dom\";\n/* Loads all checklists and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nfunction CompletedTasksPage(_ref) {\n  let props = _extends({}, _ref);\n\n  const _useState = useState(_objectSpread({}, props.checklists)),\n        _useState2 = _slicedToArray(_useState, 2),\n        checklists = _useState2[0],\n        setChecklists = _useState2[1]; // initialize to empty newTask\n\n\n  useEffect(() => {\n    if (checklists.length === 0) {\n      props.actions.fetchChecklists().catch(error => {\n        alert(\"Loading checklists failed\" + error);\n      });\n    } else {\n      //set checklist in local state to update when prop updates\n      setChecklists(_objectSpread({}, props.checklists));\n    }\n  }, [checklists.length, props.actions, props.checklists]);\n  console.log(\"checklists: \", checklists[0]);\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Completed Tasks\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, checklists));\n} // which parts of the state (DEPARTMENTS) to expose this component via props\n\n\nfunction mapStateToProps(state) {\n  return {\n    checklists: state.checklists\n  };\n}\n/* must specify the type for each prop (from mapStateToProps above)\n */\n\n\nCompletedTasksPage.propTypes = {\n  checklists: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n}; // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(checklistActions.fetchChecklists, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedTasksPage);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/checklists/CompletedTasksPage.js"],"names":["React","useState","useEffect","PropTypes","connect","checklistActions","bindActionCreators","CompletedTaskList","Link","CompletedTasksPage","props","checklists","setChecklists","length","actions","fetchChecklists","catch","error","alert","console","log","mapStateToProps","state","propTypes","array","isRequired","object","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,sCAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;;AAGA,SAASC,kBAAT,OAA0C;AAAA,MAATC,KAAS;;AAAA,oBACJT,QAAQ,mBAAMS,KAAK,CAACC,UAAZ,EADJ;AAAA;AAAA,QACjCA,UADiC;AAAA,QACrBC,aADqB,kBAC+B;;;AAEvEV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B;AAC3BH,MAAAA,KAAK,CAACI,OAAN,CAAcC,eAAd,GAAgCC,KAAhC,CAAsCC,KAAK,IAAI;AAC7CC,QAAAA,KAAK,CAAC,8BAA8BD,KAA/B,CAAL;AACD,OAFD;AAGD,KAJD,MAIO;AACL;AACAL,MAAAA,aAAa,mBAAMF,KAAK,CAACC,UAAZ,EAAb;AACD;AACF,GATQ,EASN,CAACA,UAAU,CAACE,MAAZ,EAAoBH,KAAK,CAACI,OAA1B,EAAmCJ,KAAK,CAACC,UAAzC,CATM,CAAT;AAWAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BT,UAAU,CAAC,CAAD,CAAtC;AAEA,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,UAAN,CAHF,CADF;AAYD,C,CAED;;;AACA,SAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLX,IAAAA,UAAU,EAAEW,KAAK,CAACX;AADb,GAAP;AAGD;AAED;;;;AAEAF,kBAAkB,CAACc,SAAnB,GAA+B;AAC7BZ,EAAAA,UAAU,EAAER,SAAS,CAACqB,KAAV,CAAgBC,UADC;AAE7BX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,MAAV,CAAiBD;AAFG,CAA/B,C,CAKA;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLd,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAET,kBAAkB,CACjCD,gBAAgB,CAACU,eADgB,EAEjCa,QAFiC;AAD5B;AADJ,GAAP;AAQD;;AAED,eAAexB,OAAO,CACpBiB,eADoB,EAEpBM,kBAFoB,CAAP,CAGblB,kBAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport { bindActionCreators } from \"redux\";\nimport CompletedTaskList from \"./CompletedTaskList\";\nimport { Link } from \"react-router-dom\";\n\n/* Loads all checklists and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nfunction CompletedTasksPage({ ...props }) {\n  const [checklists, setChecklists] = useState({ ...props.checklists }); // initialize to empty newTask\n\n  useEffect(() => {\n    if (checklists.length === 0) {\n      props.actions.fetchChecklists().catch(error => {\n        alert(\"Loading checklists failed\" + error);\n      });\n    } else {\n      //set checklist in local state to update when prop updates\n      setChecklists({ ...props.checklists });\n    }\n  }, [checklists.length, props.actions, props.checklists]);\n\n  console.log(\"checklists: \", checklists[0]);\n\n  return (\n    <>\n      <h2>Completed Tasks</h2>\n\n      <div>{checklists}</div>\n\n      {/* <ChecklistList\n          onDeleteClick={this.handleDeleteChecklist}\n          checklists={this.props.checklists}\n        ></ChecklistList> */}\n    </>\n  );\n}\n\n// which parts of the state (DEPARTMENTS) to expose this component via props\nfunction mapStateToProps(state) {\n  return {\n    checklists: state.checklists\n  };\n}\n\n/* must specify the type for each prop (from mapStateToProps above)\n */\nCompletedTasksPage.propTypes = {\n  checklists: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(\n        checklistActions.fetchChecklists,\n        dispatch\n      )\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompletedTasksPage);\n"]},"metadata":{},"sourceType":"module"}