{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/components/tasks/TaskList.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchTasks } from \"../redux/actions/taskActions\";\nimport * as taskActions from \"../redux/actions/taskActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst TaskList = props => {\n  const tasks = props.tasks; // load on mount\n\n  useEffect(() => {\n    props.actions.fetchTasks().catch(error => {\n      alert(\"Loading tasks failed\" + error);\n    });\n  }, [props.actions]);\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Body\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Category\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, tasks.map(task => {\n    return React.createElement(\"tr\", {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"btn btn-light\",\n      href: \"http://localhost:3001/\" + task.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Watch??\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/task/\" + tasks.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, task.title)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, task.body), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, task.category));\n  })));\n};\n/* with functional components, don't need mapStateToProps, can just pass props into the \ncomponent as an argument above\nmust specify the type of all props made available to this compnent\n */\n\n\nTaskList.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  actions: PropTypes.func.isRequired\n}; // which parts of the state (DEPARTMENTS) to expose this component via props\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks\n  };\n} // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(taskActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/components/tasks/TaskList.js"],"names":["React","useEffect","PropTypes","Link","connect","fetchTasks","taskActions","bindActionCreators","TaskList","props","tasks","actions","catch","error","alert","map","task","id","slug","title","body","category","propTypes","array","isRequired","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,8BAA7B;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA,QAChBC,KADgB,GACND,KADM,CAChBC,KADgB,EAGxB;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACE,OAAN,CAAcN,UAAd,GAA2BO,KAA3B,CAAiCC,KAAK,IAAI;AACxCC,MAAAA,KAAK,CAAC,yBAAyBD,KAA1B,CAAL;AACD,KAFD;AAGD,GAJQ,EAIN,CAACJ,KAAK,CAACE,OAAP,CAJM,CAAT;AAMA,SACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACjB,WACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,IAAI,EAAE,2BAA2BD,IAAI,CAACE,IAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,WAAWR,KAAK,CAACQ,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCF,IAAI,CAACG,KAAvC,CADF,CATF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,IAAV,CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACK,QAAV,CAbF,CADF;AAiBD,GAlBA,CADH,CATF,CADF;AAiCD,CA3CD;AA6CA;;;;;;AAIAb,QAAQ,CAACc,SAAT,GAAqB;AACnBZ,EAAAA,KAAK,EAAER,SAAS,CAACqB,KAAV,CAAgBC,UADJ;AAEnBb,EAAAA,OAAO,EAAET,SAAS,CAACuB,IAAV,CAAeD;AAFL,CAArB,C,CAKA;;AACA,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLjB,IAAAA,KAAK,EAAEiB,KAAK,CAACjB;AADR,GAAP;AAGD,C,CAED;;;AACA,SAASkB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLlB,IAAAA,OAAO,EAAEJ,kBAAkB,CAACD,WAAD,EAAcuB,QAAd;AADtB,GAAP;AAGD;;AAED,eAAezB,OAAO,CACpBsB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbpB,QAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { fetchTasks } from \"../redux/actions/taskActions\";\nimport * as taskActions from \"../redux/actions/taskActions\";\nimport { bindActionCreators } from \"redux\";\n\nconst TaskList = props => {\n  const { tasks } = props;\n\n  // load on mount\n  useEffect(() => {\n    props.actions.fetchTasks().catch(error => {\n      alert(\"Loading tasks failed\" + error);\n    });\n  }, [props.actions]);\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th />\n          <th>Title</th>\n          <th>Body</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tasks.map(task => {\n          return (\n            <tr key={task.id}>\n              <td>\n                <a\n                  className=\"btn btn-light\"\n                  href={\"http://localhost:3001/\" + task.slug}\n                >\n                  Watch??\n                </a>\n              </td>\n              <td>\n                <Link to={\"/task/\" + tasks.slug}>{task.title}</Link>\n              </td>\n              <td>{task.body}</td>\n              <td>{task.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\n/* with functional components, don't need mapStateToProps, can just pass props into the \ncomponent as an argument above\nmust specify the type of all props made available to this compnent\n */\nTaskList.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  actions: PropTypes.func.isRequired\n};\n\n// which parts of the state (DEPARTMENTS) to expose this component via props\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks\n  };\n}\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(taskActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskList);\n"]},"metadata":{},"sourceType":"module"}