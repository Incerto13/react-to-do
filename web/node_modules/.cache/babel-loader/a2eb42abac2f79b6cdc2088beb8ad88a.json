{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Projects/to-do/src/components/checklists/ChecklistsPage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport { bindActionCreators } from \"redux\";\nimport ChecklistList from \"./ChecklistList\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n/* Loads all checklists and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nclass ChecklistsPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteChecklist = checklist => {\n      toast.success(\"Checklist deleted.\"); // optimistic delete ~ remove checklist from UI before API call completes\n\n      this.props.actions.deleteChecklist(checklist).catch(error => {\n        toast.error(\"Delete failed. \" + error.message, {\n          autoClose: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.fetchChecklists().catch(error => {\n      alert(\"Loading checklists failed\" + error);\n    });\n  }\n\n  render() {\n    console.log(this.props.checklists);\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Checklists\"), React.createElement(Link, {\n      to: \"/checklist/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        marginBottom: 20\n      },\n      className: \"btn btn-primary add-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Add Checklist\")), React.createElement(ChecklistList, {\n      onDeleteClick: this.handleDeleteChecklist,\n      checklists: this.props.checklists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n} // which parts of the state (DEPARTMENTS) to expose this component via props\n\n\nfunction mapStateToProps(state) {\n  return {\n    checklists: state.checklists\n  };\n}\n/* must specify the type for each prop (from mapStateToProps above)\n */\n\n\nChecklistsPage.propTypes = {\n  checklists: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n}; // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(checklistActions.fetchChecklists, dispatch),\n      deleteChecklist: bindActionCreators(checklistActions.deleteChecklist, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChecklistsPage);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/checklists/ChecklistsPage.js"],"names":["React","Component","PropTypes","connect","checklistActions","bindActionCreators","ChecklistList","toast","Link","ChecklistsPage","handleDeleteChecklist","checklist","success","props","actions","deleteChecklist","catch","error","message","autoClose","componentDidMount","fetchChecklists","alert","render","console","log","checklists","marginBottom","mapStateToProps","state","propTypes","array","isRequired","object","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,sCAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;;AAGA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOrCS,qBAPqC,GAObC,SAAS,IAAI;AACnCJ,MAAAA,KAAK,CAACK,OAAN,CAAc,oBAAd,EADmC,CAEnC;;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,eAAnB,CAAmCJ,SAAnC,EAA8CK,KAA9C,CAAoDC,KAAK,IAAI;AAC3DV,QAAAA,KAAK,CAACU,KAAN,CAAY,oBAAoBA,KAAK,CAACC,OAAtC,EAA+C;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA/C;AACD,OAFD;AAGD,KAboC;AAAA;;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,KAAL,CAAWC,OAAX,CAAmBO,eAAnB,GAAqCL,KAArC,CAA2CC,KAAK,IAAI;AAClDK,MAAAA,KAAK,CAAC,8BAA8BL,KAA/B,CAAL;AACD,KAFD;AAGD;;AAUDM,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWa,UAAvB;AACA,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OADT;AAEE,MAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAHF,EAYE,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,KAAKjB,qBADtB;AAEE,MAAA,UAAU,EAAE,KAAKG,KAAL,CAAWa,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAmBD;;AApCoC,C,CAuCvC;;;AACA,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,UAAU,EAAEG,KAAK,CAACH;AADb,GAAP;AAGD;AAED;;;;AAEAjB,cAAc,CAACqB,SAAf,GAA2B;AACzBJ,EAAAA,UAAU,EAAExB,SAAS,CAAC6B,KAAV,CAAgBC,UADH;AAEzBlB,EAAAA,OAAO,EAAEZ,SAAS,CAAC+B,MAAV,CAAiBD;AAFD,CAA3B,C,CAKA;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLrB,IAAAA,OAAO,EAAE;AACPO,MAAAA,eAAe,EAAEhB,kBAAkB,CACjCD,gBAAgB,CAACiB,eADgB,EAEjCc,QAFiC,CAD5B;AAKPpB,MAAAA,eAAe,EAAEV,kBAAkB,CACjCD,gBAAgB,CAACW,eADgB,EAEjCoB,QAFiC;AAL5B;AADJ,GAAP;AAYD;;AAED,eAAehC,OAAO,CACpByB,eADoB,EAEpBM,kBAFoB,CAAP,CAGbzB,cAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport { bindActionCreators } from \"redux\";\nimport ChecklistList from \"./ChecklistList\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\n/* Loads all checklists and gives option to edit/delete each one \nand a button to add a new task in the upper right corner */\n\nclass ChecklistsPage extends Component {\n  componentDidMount() {\n    this.props.actions.fetchChecklists().catch(error => {\n      alert(\"Loading checklists failed\" + error);\n    });\n  }\n\n  handleDeleteChecklist = checklist => {\n    toast.success(\"Checklist deleted.\");\n    // optimistic delete ~ remove checklist from UI before API call completes\n    this.props.actions.deleteChecklist(checklist).catch(error => {\n      toast.error(\"Delete failed. \" + error.message, { autoClose: false });\n    });\n  };\n\n  render() {\n    console.log(this.props.checklists);\n    return (\n      <>\n        <h2>Checklists</h2>\n\n        <Link to={\"/checklist/\"}>\n          <button\n            style={{ marginBottom: 20 }}\n            className=\"btn btn-primary add-task\"\n          >\n            Add Checklist\n          </button>\n        </Link>\n\n        <ChecklistList\n          onDeleteClick={this.handleDeleteChecklist}\n          checklists={this.props.checklists}\n        ></ChecklistList>\n      </>\n    );\n  }\n}\n\n// which parts of the state (DEPARTMENTS) to expose this component via props\nfunction mapStateToProps(state) {\n  return {\n    checklists: state.checklists\n  };\n}\n\n/* must specify the type for each prop (from mapStateToProps above)\n */\nChecklistsPage.propTypes = {\n  checklists: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(\n        checklistActions.fetchChecklists,\n        dispatch\n      ),\n      deleteChecklist: bindActionCreators(\n        checklistActions.deleteChecklist,\n        dispatch\n      )\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChecklistsPage);\n"]},"metadata":{},"sourceType":"module"}