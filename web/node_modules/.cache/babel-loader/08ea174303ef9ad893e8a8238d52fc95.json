{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport * as taskApi from \"../../api/taskApi\"; // These are ACTION CREATORS for the task reducer (department) of the store\n// // returns entire array of tasks\n// export function fetchTasksSuccess(tasks) {\n//   return { type: types.FETCH_TASKS_SUCCESS, payload: tasks };\n// }\n\n/*\nkey used for each item here (after type) is referenced in reducer\n*/\n\nexport function createTask(task) {\n  return {\n    type: types.CREATE_TASK,\n    task: task\n  };\n}\nexport function fetchTasks() {\n  return function (dispatch) {\n    return taskApi.getTasks().then(tasks => {\n      dispatch(fetchTasksSuccess(tasks));\n    }).catch(error => {\n      throw error;\n    });\n  };\n}","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/react-games/to-do_(backup)/src/redux/actions/taskActions.js"],"names":["types","taskApi","createTask","task","type","CREATE_TASK","fetchTasks","dispatch","getTasks","then","tasks","fetchTasksSuccess","catch","error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB,C,CAEA;AAEA;AACA;AACA;AACA;;AAEA;;;;AAGA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,WADP;AAELF,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID;AAED,OAAO,SAASG,UAAT,GAAsB;AAC3B,SAAO,UAASC,QAAT,EAAmB;AACxB,WAAON,OAAO,CACXO,QADI,GAEJC,IAFI,CAECC,KAAK,IAAI;AACbH,MAAAA,QAAQ,CAACI,iBAAiB,CAACD,KAAD,CAAlB,CAAR;AACD,KAJI,EAKJE,KALI,CAKEC,KAAK,IAAI;AACd,YAAMA,KAAN;AACD,KAPI,CAAP;AAQD,GATD;AAUD","sourcesContent":["import * as types from \"./actionTypes\";\nimport * as taskApi from \"../../api/taskApi\";\n\n// These are ACTION CREATORS for the task reducer (department) of the store\n\n// // returns entire array of tasks\n// export function fetchTasksSuccess(tasks) {\n//   return { type: types.FETCH_TASKS_SUCCESS, payload: tasks };\n// }\n\n/*\nkey used for each item here (after type) is referenced in reducer\n*/\nexport function createTask(task) {\n  return {\n    type: types.CREATE_TASK,\n    task: task\n  };\n}\n\nexport function fetchTasks() {\n  return function(dispatch) {\n    return taskApi\n      .getTasks()\n      .then(tasks => {\n        dispatch(fetchTasksSuccess(tasks));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}