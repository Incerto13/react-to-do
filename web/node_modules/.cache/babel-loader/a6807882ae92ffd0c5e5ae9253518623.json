{"ast":null,"code":"import { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport usePrevious from \"../custom_hooks/usePrevious\";\nimport ChecklistTaskView from \"./ChecklistTaskView\";\nimport ChecklistForm from \"./ChecklistForm\";\nimport newChecklist from \"./newChecklist\";\nimport { bindActionCreators } from \"redux\";\nimport { toast } from \"react-toastify\";\n\nfunction updateChecklist(checklist, ...props) {\n  useEffect(() => {\n    props.actions.saveChecklist(checklist).then(() => {\n      toast.success(\"Task updated.\");\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }, [checklist, props.actions]);\n} // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(checklistActions.fetchChecklists, dispatch),\n      fetchCategories: bindActionCreators(categoryActions.fetchCategories, dispatch),\n      saveChecklist: bindActionCreators(checklistActions.saveChecklist, dispatch)\n    }\n  };\n}\n\nexport default connect(mapDispatchToProps)(updateChecklist);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/custom_hooks/updateChecklist.js"],"names":["useEffect","useState","useRef","PropTypes","connect","checklistActions","categoryActions","usePrevious","ChecklistTaskView","ChecklistForm","newChecklist","bindActionCreators","toast","updateChecklist","checklist","props","actions","saveChecklist","then","success","catch","error","console","log","message","mapDispatchToProps","dispatch","fetchChecklists","fetchCategories"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,sCAAlC;AACA,OAAO,KAAKC,eAAZ,MAAiC,qCAAjC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,SAASC,eAAT,CAAyBC,SAAzB,EAAoC,GAAGC,KAAvC,EAA8C;AAC5Cf,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAACC,OAAN,CACGC,aADH,CACiBH,SADjB,EAEGI,IAFH,CAEQ,MAAM;AACVN,MAAAA,KAAK,CAACO,OAAN,CAAc,eAAd;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KAPH;AAQD,GATQ,EASN,CAACV,SAAD,EAAYC,KAAK,CAACC,OAAlB,CATM,CAAT;AAUD,C,CAED;;;AACA,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLV,IAAAA,OAAO,EAAE;AACPW,MAAAA,eAAe,EAAEhB,kBAAkB,CACjCN,gBAAgB,CAACsB,eADgB,EAEjCD,QAFiC,CAD5B;AAKPE,MAAAA,eAAe,EAAEjB,kBAAkB,CACjCL,eAAe,CAACsB,eADiB,EAEjCF,QAFiC,CAL5B;AASPT,MAAAA,aAAa,EAAEN,kBAAkB,CAC/BN,gBAAgB,CAACY,aADc,EAE/BS,QAF+B;AAT1B;AADJ,GAAP;AAgBD;;AAED,eAAetB,OAAO,CAACqB,kBAAD,CAAP,CAA4BZ,eAA5B,CAAf","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as checklistActions from \"../../redux/actions/checklistActions\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport usePrevious from \"../custom_hooks/usePrevious\";\nimport ChecklistTaskView from \"./ChecklistTaskView\";\nimport ChecklistForm from \"./ChecklistForm\";\nimport newChecklist from \"./newChecklist\";\nimport { bindActionCreators } from \"redux\";\nimport { toast } from \"react-toastify\";\n\nfunction updateChecklist(checklist, ...props) {\n  useEffect(() => {\n    props.actions\n      .saveChecklist(checklist)\n      .then(() => {\n        toast.success(\"Task updated.\");\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [checklist, props.actions]);\n}\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchChecklists: bindActionCreators(\n        checklistActions.fetchChecklists,\n        dispatch\n      ),\n      fetchCategories: bindActionCreators(\n        categoryActions.fetchCategories,\n        dispatch\n      ),\n      saveChecklist: bindActionCreators(\n        checklistActions.saveChecklist,\n        dispatch\n      )\n    }\n  };\n}\n\nexport default connect(mapDispatchToProps)(updateChecklist);\n"]},"metadata":{},"sourceType":"module"}