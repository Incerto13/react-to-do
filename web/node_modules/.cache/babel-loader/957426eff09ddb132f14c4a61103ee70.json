{"ast":null,"code":"import { useEffect, useRef } from \"react\";\nconst isFirstRun = useRef(0); // returns last version of value only after it has changed\n\nfunction usePrevious(value) {\n  if (isFirstRun.current < 2) {\n    isFirstRun.current += 1;\n    return;\n  }\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default usePrevious;","map":{"version":3,"sources":["/home/akin/dev/JS/react/Projects/to-do/src/components/custom_hooks/usePrevious.js"],"names":["useEffect","useRef","isFirstRun","usePrevious","value","current","ref"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAAC,CAAD,CAAzB,C,CAEA;;AACA,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAIF,UAAU,CAACG,OAAX,GAAqB,CAAzB,EAA4B;AAC1BH,IAAAA,UAAU,CAACG,OAAX,IAAsB,CAAtB;AACA;AACD;;AAED,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAACD,OAAJ,GAAcD,KAAd;AACD,GAFQ,CAAT;AAGA,SAAOE,GAAG,CAACD,OAAX;AACD;;AAED,eAAeF,WAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst isFirstRun = useRef(0);\n\n// returns last version of value only after it has changed\nfunction usePrevious(value) {\n  if (isFirstRun.current < 2) {\n    isFirstRun.current += 1;\n    return;\n  }\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default usePrevious;\n"]},"metadata":{},"sourceType":"module"}