{"ast":null,"code":"var _jsxFileName = \"/home/akin/dev/JS/react/Portfolio/to-do/src/components/categories/CategoriesPage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport { bindActionCreators } from \"redux\";\nimport CategoryList from \"./CategoryList\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nclass CategoriesPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteCategory = category => {\n      toast.success(\"Category deleted.\"); // optimistic delete ~ remove category from UI before API call completes\n\n      this.props.actions.deleteCategory(category).catch(error => {\n        toast.error(\"Delete failed. \" + error.message, {\n          autoClose: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.fetchCategories().catch(error => {\n      alert(\"Loading categories failed\" + error);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(Link, {\n      to: \"/category/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        marginBottom: 20\n      },\n      className: \"btn btn-primary add-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Add Category\")), React.createElement(CategoryList, {\n      onDeleteClick: this.handleDeleteCategory,\n      categories: this.props.categories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n} // which parts of the state (DEPARTMENTS) to expose this component via props\n\n\nfunction mapStateToProps(state) {\n  return {\n    categories: state.categories // need access to categories reducer to do mapping above\n\n  };\n}\n/* must specify the type for each prop (from mapStateToProps above)\n */\n\n\nCategoriesPage.propTypes = {\n  categories: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n}; // which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchCategories: bindActionCreators(categoryActions.fetchCategories, dispatch),\n      deleteCategory: bindActionCreators(categoryActions.deleteCategory, dispatch)\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesPage);","map":{"version":3,"sources":["/home/akin/dev/JS/react/Portfolio/to-do/src/components/categories/CategoriesPage.js"],"names":["React","Component","PropTypes","connect","categoryActions","bindActionCreators","CategoryList","toast","Link","CategoriesPage","handleDeleteCategory","category","success","props","actions","deleteCategory","catch","error","message","autoClose","componentDidMount","fetchCategories","alert","render","marginBottom","categories","mapStateToProps","state","propTypes","array","isRequired","object","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,eAAZ,MAAiC,qCAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAOrCS,oBAPqC,GAOdC,QAAQ,IAAI;AACjCJ,MAAAA,KAAK,CAACK,OAAN,CAAc,mBAAd,EADiC,CAEjC;;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,cAAnB,CAAkCJ,QAAlC,EAA4CK,KAA5C,CAAkDC,KAAK,IAAI;AACzDV,QAAAA,KAAK,CAACU,KAAN,CAAY,oBAAoBA,KAAK,CAACC,OAAtC,EAA+C;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA/C;AACD,OAFD;AAGD,KAboC;AAAA;;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,KAAL,CAAWC,OAAX,CAAmBO,eAAnB,GAAqCL,KAArC,CAA2CC,KAAK,IAAI;AAClDK,MAAAA,KAAK,CAAC,8BAA8BL,KAA/B,CAAL;AACD,KAFD;AAGD;;AAUDM,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OADT;AAEE,MAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAHF,EAYE,oBAAC,YAAD;AACE,MAAA,aAAa,EAAE,KAAKd,oBADtB;AAEE,MAAA,UAAU,EAAE,KAAKG,KAAL,CAAWY,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAmBD;;AAnCoC,C,CAsCvC;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,UAAU,EAAEE,KAAK,CAACF,UADb,CACwB;;AADxB,GAAP;AAGD;AAED;;;;AAEAhB,cAAc,CAACmB,SAAf,GAA2B;AACzBH,EAAAA,UAAU,EAAEvB,SAAS,CAAC2B,KAAV,CAAgBC,UADH;AAEzBhB,EAAAA,OAAO,EAAEZ,SAAS,CAAC6B,MAAV,CAAiBD;AAFD,CAA3B,C,CAKA;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLnB,IAAAA,OAAO,EAAE;AACPO,MAAAA,eAAe,EAAEhB,kBAAkB,CACjCD,eAAe,CAACiB,eADiB,EAEjCY,QAFiC,CAD5B;AAKPlB,MAAAA,cAAc,EAAEV,kBAAkB,CAChCD,eAAe,CAACW,cADgB,EAEhCkB,QAFgC;AAL3B;AADJ,GAAP;AAYD;;AAED,eAAe9B,OAAO,CACpBuB,eADoB,EAEpBM,kBAFoB,CAAP,CAGbvB,cAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\nimport { bindActionCreators } from \"redux\";\nimport CategoryList from \"./CategoryList\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nclass CategoriesPage extends Component {\n  componentDidMount() {\n    this.props.actions.fetchCategories().catch(error => {\n      alert(\"Loading categories failed\" + error);\n    });\n  }\n\n  handleDeleteCategory = category => {\n    toast.success(\"Category deleted.\");\n    // optimistic delete ~ remove category from UI before API call completes\n    this.props.actions.deleteCategory(category).catch(error => {\n      toast.error(\"Delete failed. \" + error.message, { autoClose: false });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Categories</h2>\n\n        <Link to={\"/category/\"}>\n          <button\n            style={{ marginBottom: 20 }}\n            className=\"btn btn-primary add-task\"\n          >\n            Add Category\n          </button>\n        </Link>\n\n        <CategoryList\n          onDeleteClick={this.handleDeleteCategory}\n          categories={this.props.categories}\n        ></CategoryList>\n      </>\n    );\n  }\n}\n\n// which parts of the state (DEPARTMENTS) to expose this component via props\nfunction mapStateToProps(state) {\n  return {\n    categories: state.categories // need access to categories reducer to do mapping above\n  };\n}\n\n/* must specify the type for each prop (from mapStateToProps above)\n */\nCategoriesPage.propTypes = {\n  categories: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\n// which (forms) ACTOIN CREATORS are available to drop off to dispatch (form receiver/ bad mail man) on this component\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      fetchCategories: bindActionCreators(\n        categoryActions.fetchCategories,\n        dispatch\n      ),\n      deleteCategory: bindActionCreators(\n        categoryActions.deleteCategory,\n        dispatch\n      )\n    }\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoriesPage);\n"]},"metadata":{},"sourceType":"module"}